// <auto-generated />
using System;
using ItTrAp.IdentityService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItTrAp.IdentityService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItTrAp.IdentityService.Domain.Aggregates.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_permissions");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_permissions_name");

                    b.ToTable("permissions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "users:get"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "users:list"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "users:create"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "users:update"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "users:delete"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "users:reset_password"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "categories:list"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "categories:list_from_node"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "categories:create"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "categories:update"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "categories:delete"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "locations:list"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "locations:get"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "locations:create"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "locations:update"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "locations:delete"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "locations:get_qr_code"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "movable_items:list"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "movable_items:get"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "movable_items:create"
                        },
                        new
                        {
                            Id = 21L,
                            Name = "movable_items:update"
                        },
                        new
                        {
                            Id = 22L,
                            Name = "movable_items:delete"
                        },
                        new
                        {
                            Id = 23L,
                            Name = "movable_instances:list"
                        },
                        new
                        {
                            Id = 24L,
                            Name = "movable_instances:get"
                        },
                        new
                        {
                            Id = 25L,
                            Name = "movable_instances:create"
                        },
                        new
                        {
                            Id = 26L,
                            Name = "movable_instances:delete"
                        },
                        new
                        {
                            Id = 27L,
                            Name = "movable_instances:book"
                        },
                        new
                        {
                            Id = 28L,
                            Name = "movable_instances:cancel_booking"
                        },
                        new
                        {
                            Id = 29L,
                            Name = "movable_instances:assign"
                        },
                        new
                        {
                            Id = 30L,
                            Name = "movable_instances:take_by_code"
                        },
                        new
                        {
                            Id = 31L,
                            Name = "movable_instances:release"
                        },
                        new
                        {
                            Id = 32L,
                            Name = "movable_instances:move"
                        },
                        new
                        {
                            Id = 33L,
                            Name = "movable_instances:get_qr_code"
                        },
                        new
                        {
                            Id = 34L,
                            Name = "users:update_password"
                        });
                });

            modelBuilder.Entity("ItTrAp.IdentityService.Domain.Aggregates.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_roles_name");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "user"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "manager"
                        });
                });

            modelBuilder.Entity("ItTrAp.IdentityService.Domain.Aggregates.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<byte[]>("_passwordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("_salt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("salt");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ItTrAp.IdentityService.Infrastructure.Models.UserSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<string>("Fingerprint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fingerprint");

                    b.Property<Guid>("RefreshToken")
                        .HasColumnType("uuid")
                        .HasColumnName("refresh_token");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_agent");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_sessions");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_sessions_user_id");

                    b.ToTable("user_sessions", (string)null);
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<long>("PermissionsId")
                        .HasColumnType("bigint")
                        .HasColumnName("permissions_id");

                    b.Property<long>("RolesId")
                        .HasColumnType("bigint")
                        .HasColumnName("roles_id");

                    b.HasKey("PermissionsId", "RolesId")
                        .HasName("pk_roles_permissions");

                    b.HasIndex("RolesId")
                        .HasDatabaseName("ix_roles_permissions_roles_id");

                    b.ToTable("roles_permissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionsId = 1L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 2L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 3L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 4L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 5L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 6L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 7L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 8L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 9L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 10L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 11L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 12L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 13L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 14L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 15L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 16L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 17L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 18L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 19L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 20L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 21L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 22L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 23L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 24L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 25L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 26L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 27L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 28L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 29L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 30L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 31L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 32L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 33L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 34L,
                            RolesId = 1L
                        },
                        new
                        {
                            PermissionsId = 1L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 2L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 3L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 4L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 5L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 6L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 7L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 8L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 9L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 10L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 11L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 12L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 13L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 14L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 15L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 16L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 17L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 18L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 19L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 20L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 21L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 22L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 23L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 24L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 25L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 26L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 27L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 28L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 29L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 31L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 32L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 33L,
                            RolesId = 3L
                        },
                        new
                        {
                            PermissionsId = 1L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 2L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 7L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 8L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 12L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 13L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 18L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 19L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 23L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 24L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 27L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 28L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 30L,
                            RolesId = 2L
                        },
                        new
                        {
                            PermissionsId = 31L,
                            RolesId = 2L
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<long>("RolesId")
                        .HasColumnType("bigint")
                        .HasColumnName("roles_id");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint")
                        .HasColumnName("users_id");

                    b.HasKey("RolesId", "UsersId")
                        .HasName("pk_users_roles");

                    b.HasIndex("UsersId")
                        .HasDatabaseName("ix_users_roles_users_id");

                    b.ToTable("users_roles", (string)null);
                });

            modelBuilder.Entity("ItTrAp.IdentityService.Infrastructure.Models.UserSession", b =>
                {
                    b.HasOne("ItTrAp.IdentityService.Domain.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_sessions_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("ItTrAp.IdentityService.Domain.Aggregates.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_roles_permissions_permissions_permissions_id");

                    b.HasOne("ItTrAp.IdentityService.Domain.Aggregates.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_roles_permissions_roles_roles_id");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("ItTrAp.IdentityService.Domain.Aggregates.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_roles_roles_roles_id");

                    b.HasOne("ItTrAp.IdentityService.Domain.Aggregates.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_roles_users_users_id");
                });
#pragma warning restore 612, 618
        }
    }
}
