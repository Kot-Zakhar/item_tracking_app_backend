// <auto-generated />
using System;
using ItTrAp.ManagementService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItTrAp.ManagementService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.HasKey("Id")
                        .HasName("pk_locations");

                    b.ToTable("locations", (string)null);
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.MovableInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("location_id");

                    b.Property<Guid>("MovableItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("movable_item_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_movable_instances");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_movable_instances_location_id");

                    b.HasIndex("MovableItemId")
                        .HasDatabaseName("ix_movable_instances_movable_item_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_movable_instances_user_id");

                    b.ToTable("movable_instances", (string)null);
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.MovableItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_movable_items");

                    b.ToTable("movable_items", (string)null);
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.MovableInstance", b =>
                {
                    b.HasOne("ItTrAp.ManagementService.Domain.Aggregates.Location", "Location")
                        .WithMany("MovableInstances")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_movable_instances_locations_location_id");

                    b.HasOne("ItTrAp.ManagementService.Domain.Aggregates.MovableItem", "MovableItem")
                        .WithMany("MovableInstances")
                        .HasForeignKey("MovableItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_movable_instances_movable_items_movable_item_id");

                    b.HasOne("ItTrAp.ManagementService.Domain.Aggregates.User", "User")
                        .WithMany("MovableInstances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_movable_instances_users_user_id");

                    b.Navigation("Location");

                    b.Navigation("MovableItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.Location", b =>
                {
                    b.Navigation("MovableInstances");
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.MovableItem", b =>
                {
                    b.Navigation("MovableInstances");
                });

            modelBuilder.Entity("ItTrAp.ManagementService.Domain.Aggregates.User", b =>
                {
                    b.Navigation("MovableInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
